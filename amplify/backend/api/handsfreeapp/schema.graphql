# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules
input AMPLIFY {
  globalAuthRule: AuthRule = {allow: public}
} # FOR TESTING ONLY!
type Mutation {
  vnpayUrlPayment(
    amount: Int!
    user: String!
    errandId: String!
    helper: String!
  ): String
    @function(name: "verifyUser-${env}")
    @function(name: "verifyErrand-${env}")
    @function(name: "createVNPayUrl-${env}")
}

enum PaymentStatus {
  PENDING
  FAIL
  COMPlETE
}

type PaymentDetail @model {
  tmnCode: String!
  amount: Int!
  bankCode: String! # example: NCB
  cardType: String # ATM / QRcode
  payDate: String # format yyyyMMddHHmmss
  info: String!
  tranNo: String!
  responseCode: String!
  tranStatus: String!
  secureHash: String!
  payment: String
}

type Payment @model {
  id: ID!
  user: String!
  errandId: String!
  helper: String!
  txnRef: String!
  detail: String
  isDeleted: Boolean!
}

type User @model {
  id: ID!
  referralCode: String
  clientId: String
  helperId: String
  email: String
  profileImage: String
  nickname: String
  i18n: String
  languages: [String]
  isHelper: Boolean
  helperProfileImage: String
  helperName: String
  helperBirthDate: String
  helperIdentityImage: String
  helperIdentityBackImage: String
  helperIdentityFaceImage: String
  helperPhone: String
  helperFacebook: String
  helperIdentityStatus: String
  helperPhoneStatus: String
  helperFacebookStatus: String
  helperScore: Int
  helperCompletedCnt: Int
  helperReviewList: [String]
  helperPhoneRejectReason: String
  helperFacebookRejectReason: String
  helperIdentityRejectReason: String
  fcmToken: String
}

type Category @model {
  id: ID!
  name: String!
  nameEn: String
  nameKo: String
  nameVi: String
  imageUrl: String
  subCategories: String
}

enum ErrandStatus {
  PENDING
  ACCEPTED
  COMPLETED
  CANCELLED
}

type Errand @model {
  id: ID!
  clientId: String!
  helperId: String
  title: String
  description: String
  volunteerIDs: [String]
  volunteers: [String]
  categoryId: String!
  subCategoryId: String!
  startTime: String
  price: Int
  latitude: Float!
  longitude: Float!
  address: String
  status: String
  cancelReasons: [String]
  views: Int
  imageUrls: [String]
  hasActiveChat: Boolean
  chatId: String
}

type Chat @model {
  id: ID!
  clientId: String!
  clientFcm: String
  clientName: String!
  clientImageUrl: String!
  helperId: String!
  helperFcm: String
  helperName: String!
  helperImageUrl: String!
  errandId: String!
  categoryId: String!
  messages: [String]
  status: String
}
